CMAKE_MINIMUM_REQUIRED(VERSION 3.19)
PROJECT(FramelessWidget)

SET(CMAKE_CXX_STANDARD 14)
SET(CMAKE_PREFIX_PATH "/usr/bin/cmake")

IF(NOT CMAKE_PREFIX_PATH)
    message(WARNING "CMAKE_PREFIX_PATH is not defined, you may need to set it "
            "(-DCMAKE_PREFIX_PATH=\"path/to/Qt/lib/cmake\" or -DCMAKE_PREFIX_PATH=/usr/include/{host}/qt{version}/ on Ubuntu)")
ENDIF()


SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)
#不需要UI
#SET(CMAKE_AUTOUIC ON)

SET(QT_VERSION 5)
SET(REQUIRED_LIBS Core Gui Widgets)
SET(REQUIRED_LIBS_QUALIFIED Qt${QT_VERSION}::Core Qt${QT_VERSION}::Gui Qt${QT_VERSION}::Widgets)

IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
    SET(REQUIRED_LIBS ${REQUIRED_LIBS} X11Extras)
    SET(REQUIRED_LIBS_QUALIFIED ${REQUIRED_LIBS_QUALIFIED} Qt${QT_VERSION}::X11Extras)
ENDIF(CMAKE_SYSTEM_NAME MATCHES "Linux")


#资源文件
SET(QRC resource/img.qrc resource/qss.qrc)
#源文件
AUX_SOURCE_DIRECTORY(. SRC)

IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
    #x11提前链接
    FIND_PACKAGE(X11 REQUIRED)
    LINK_LIBRARIES(${X11_LIBRARIES})
    LINK_DIRECTORIES(${X11_INCLUDE_DIR})
ENDIF(CMAKE_SYSTEM_NAME MATCHES "Linux")

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRC} ${QRC})

FIND_PACKAGE(Qt${QT_VERSION} COMPONENTS ${REQUIRED_LIBS} REQUIRED)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${REQUIRED_LIBS_QUALIFIED})