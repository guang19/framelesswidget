CMAKE_MINIMUM_REQUIRED(VERSION 3.19)
PROJECT(sample)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_PREFIX_PATH "/usr/bin/cmake")
IF(NOT CMAKE_PREFIX_PATH)
    message(WARNING "CMAKE_PREFIX_PATH is not defined, you may need to set it "
            "(-DCMAKE_PREFIX_PATH=\"path/to/Qt/lib/cmake\" or -DCMAKE_PREFIX_PATH=/usr/include/{host}/qt{version}/ on Ubuntu)")
ENDIF()


SET(CMAKE_BUILD_TYPE DEBUG)
#可执行文件输出目录
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/build/debug/bin)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}build/release/bin)

SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)
#不需要UI
#SET(CMAKE_AUTOUIC ON)

SET(QT_VERSION 5)
SET(REQUIRED_LIBS Core Gui Widgets)
SET(REQUIRED_LIBS_QUALIFIED Qt${QT_VERSION}::Core Qt${QT_VERSION}::Gui Qt${QT_VERSION}::Widgets)

#链接动态库
LINK_LIBRARIES(FramelessWidget)
LINK_DIRECTORIES(../src/build/debug/shared)

ADD_EXECUTABLE(${PROJECT_NAME} main.cpp)

FIND_PACKAGE(Qt${QT_VERSION} COMPONENTS ${REQUIRED_LIBS} REQUIRED)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${REQUIRED_LIBS_QUALIFIED})